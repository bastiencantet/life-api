name: Rust CD

on:
  push:
    branches:
      - master
      - main

jobs:
  build-and-push-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Retrieve version of the module
        id: version
        run: |
          CRATE_VERSION=$(cargo metadata --format-version=1 --no-deps | jq -r '.packages[0].version')
          echo "CRATE_VERSION=$CRATE_VERSION" >> $GITHUB_ENV
      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.1.0
      - name: Build and push the Docker Image (Prod)
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: .
          push: true
          cache-from: type=gha,scope=
          cache-to: type=gha,mode=max,scope=
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/life-api:latest
            ${{ secrets.DOCKER_USERNAME }}/life-api:${{ steps.version.outputs.CRATE_VERSION }}

  restart-kubernetes-deployment:
    name: Restart Kubernetes Deployment
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: Setup Kubectl
        uses: tale/kubectl-action@v1
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
      - name: Restart Kubernetes Deployment
        run: |
          kubectl rollout restart deployment -l app=life-api -n default